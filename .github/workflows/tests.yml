name: Portfolio Automation Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 17 * * *"

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ./PortfolioAutomation/PortfolioAutomation.sln

      - name: Build solution
        run: dotnet build ./PortfolioAutomation/PortfolioAutomation.sln --configuration Release --no-restore

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: |
          dotnet test ./PortfolioAutomationTest/PortfolioAutomationTest.csproj \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory ./TestResults
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
        continue-on-error: true   

      - name: Convert TRX to JSON
        if: always()
        run: |
          # install trx2junit
          dotnet tool install --global dotnet-trx2junit
          export PATH="$PATH:/home/runner/.dotnet/tools"

          if [ -f ./TestResults/test-results.trx ]; then
            echo "Converting TRX to JUnit XML..."
            trx2junit ./TestResults/test-results.trx

            echo "Converting JUnit XML to JSON..."
            sudo apt-get update && sudo apt-get install -y nodejs npm
            npm install -g xml2json-command

            xml2json ./TestResults/test-results.xml > ./TestResults/test-results.json
          else
            echo "No TRX file found. Creating fallback JSON..."
            echo '{
              "testRun": {
                "name": "PortfolioAutomationTest",
                "resultSummary": {
                  "outcome": "No TRX generated",
                  "counters": {
                    "total": 0,
                    "executed": 0,
                    "passed": 0,
                    "failed": 0
                  }
                },
                "results": []
              }
            }' > ./TestResults/test-results.json
          fi

      - name: Upload test results (TRX + JSON)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults/*

      - name: Commit JSON results to results branch
        if: always()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          mkdir -p results
          cp ./TestResults/test-results.json results/$(date +'%Y-%m-%d')-${{ github.run_id }}.json

          git fetch origin
          git checkout results || git checkout -b results

          git add results/
          git commit -m "Add test results for $(date +'%Y-%m-%d') run ${{ github.run_id }}" || echo "No changes to commit"
          git push origin results
